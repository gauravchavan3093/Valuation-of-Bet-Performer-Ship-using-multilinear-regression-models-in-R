Units_USD=NA,
Length=272,
Width=42.7)
predict(AgeDWTIndex.lm, BetPerformer)
#--------------------------------------------------------------------------------------------------
### Standard EOF
# Detach ships from search path!
detach()
predict(AgeDWTIndexSpeed.lm, BetPerformer)
predict(Provided.lm, BetPerformer)
predict(AgeIndex.lm, BetPerformer)
predict(AgeDWT.lm, BetPerformer)
View(BetPerformer)
View(ships)
as.Date(39576)
as.Date(39576, origin = "1899-12-30")
as.Date(39578, origin = "1899-12-30")
# create Bet Performer record
BetPerformer <- data.frame(SalesDate=39578,
Name="Bet Performer",
SalePrice=NA,
YearBuilt=1997,
AgeAtSale=11,
DWT=172,
Index=12479,
Speed=9.6,
Draught=5.4,
Tons=87120,
USD_Units=NA,
Units_USD=NA,
Length=272,
Width=42.7)
predict(Provided.lm, BetPerformer)
x <- rnorm(15)
y <- x + rnorm(15)
predict(lm(y ~ x))
new <- data.frame(x = seq(-3, 3, 0.5))
predict(lm(y ~ x), new, se.fit = TRUE)
pred.w.plim <- predict(lm(y ~ x), new, interval = "prediction")
pred.w.clim <- predict(lm(y ~ x), new, interval = "confidence")
matplot(new$x, cbind(pred.w.clim, pred.w.plim[,-1]),
lty = c(1,2,2,3,3), type = "l", ylab = "predicted y")
# do we want "prediction" or "confidence"?
predict(AgeDWTIndex.lm, BetPerformer, interval="predict")
# do we want "prediction" or "confidence"?
predict(AgeDWTIndex.lm, BetPerformer, interval="confidence")
predict(Provided.lm, BetPerformer, interval="confidence")
predict(Provided.lm, BetPerformer, interval="confidence")
predict(AgeIndex.lm, BetPerformer, interval="confidence")
predict(AgeDWT.lm, BetPerformer, interval="confidence")
#       fit      lwr      upr
#  125.8295 118.8899 132.7692
pred.w.plim <- predict(AgeDWTIndex.lm, BetPerformer, interval = "prediction")
pred.w.clim <- predict(AgeDWTIndex.lm, BetPerformer, interval = "confidence")
matplot(BetPerformer$SalePrice, cbind(pred.w.clim, pred.w.plim[,-1]),
lty = c(1,2,2,3,3), type = "l", ylab = "predicted y")
#       fit      lwr      upr
#  125.8295 118.8899 132.7692
pred.w.plim <- predict(AgeDWTIndex.lm, BetPerformer, interval = "prediction")
pred.w.clim <- predict(AgeDWTIndex.lm, BetPerformer, interval = "confidence")
matplot(BetPerformer$SalePrice, cbind(pred.w.clim, pred.w.plim[,-1]),
lty = c(1,2,2,3,3), type = "l", ylab = "predicted y")
matplot(predict(AgeDWTIndex.lm, BetPerformer), cbind(pred.w.clim, pred.w.plim[,-1]),
lty = c(1,2,2,3,3), type = "l", ylab = "predicted y")
#--------------------------------------------------------------------------------------------------
### Draw scatterplots of value vs. each attribute to visually ascertain relationships
Date.gg <- ggplot() +
geom_point(data=ships, aes(x=SalePrice,y=SalesDate)) +
aes(colour = SalePrice)) + scale_colour_gradient(low = "blue")) +
coord_flip()
Date.gg
#--------------------------------------------------------------------------------------------------
### Draw scatterplots of value vs. each attribute to visually ascertain relationships
Date.gg <- ggplot() +
geom_point(data=ships,
aes(x=SalePrice,y=SalesDate) +
(colour = SalePrice) +
scale_colour_gradient(low = "blue")) +
coord_flip()
aes(x=SalePrice,y=SalesDate +
#--------------------------------------------------------------------------------------------------
### Draw scatterplots of value vs. each attribute to visually ascertain relationships
Date.gg <- ggplot(data=ships, aes(x=SalePrice,y=SalesDate)) +
geom_point(aes(aes(colour = SalePrice)) + scale_colour_gradient(low = "blue")) +
coord_flip()
geom_point(aes(colour = SalePrice + scale_colour_gradient(low = "blue")) +
#--------------------------------------------------------------------------------------------------
### Draw scatterplots of value vs. each attribute to visually ascertain relationships
Date.gg <- ggplot(data=ships, aes(x=SalePrice,y=SalesDate)) +
geom_point(aes(colour = SalePrice) + scale_colour_gradient(low = "blue")) +
coord_flip()
#--------------------------------------------------------------------------------------------------
### Draw scatterplots of value vs. each attribute to visually ascertain relationships
Date.gg <- ggplot(data=ships, aes(x=SalePrice,y=SalesDate)) +
geom_point(scale_colour_gradient(low = "blue")) +
coord_flip()
#--------------------------------------------------------------------------------------------------
### Draw scatterplots of value vs. each attribute to visually ascertain relationships
Date.gg <- ggplot(data=ships, aes(x=SalePrice,y=SalesDate)) +
geom_point(aes(colour = "SalePrice") + scale_colour_gradient(low = "blue")) +
coord_flip()
#--------------------------------------------------------------------------------------------------
### Draw scatterplots of value vs. each attribute to visually ascertain relationships
Date.gg <- ggplot(data=ships, aes(x=SalePrice,y=SalesDate)) +
geom_point(colour = "red", size = 3) +
coord_flip()
Date.gg
#--------------------------------------------------------------------------------------------------
### Draw scatterplots of value vs. each attribute to visually ascertain relationships
Date.gg <- ggplot(data=ships, aes(x=SalePrice,y=SalesDate)) +
geom_point(colour = "red", size = 3) +
theme_light() +
coord_flip()
Date.gg
#--------------------------------------------------------------------------------------------------
### Draw scatterplots of value vs. each attribute to visually ascertain relationships
Date.gg <- ggplot(data=ships, aes(x=SalePrice,y=SalesDate)) +
geom_point(colour = "blue", size = 3) +
theme_light() +
coord_flip()
#--------------------------------------------------------------------------------------------------
### Draw scatterplots of value vs. each attribute to visually ascertain relationships
Date.gg <- ggplot(data=ships, aes(x=SalePrice,y=SalesDate)) +
geom_point(colour = "blue", size = 3) +
theme_light() +
coord_flip()
Date.gg
#--------------------------------------------------------------------------------------------------
### Draw scatterplots of value vs. each attribute to visually ascertain relationships
Date.gg <- ggplot(data=ships, aes(x=SalePrice,y=SalesDate)) +
geom_point(colour = "blue", size = 3) +
labs(x = "Sale Price ($ US Mil)", y = "Sales Date")
Date.gg
#--------------------------------------------------------------------------------------------------
### Draw scatterplots of value vs. each attribute to visually ascertain relationships
Date.gg <- ggplot(data=ships, aes(x=SalePrice,y=SalesDate)) +
geom_point(colour = "blue", size = 3) +
labs(x = "Sale Price ($ US Mil)", y = "Sales Date") +
theme_light() +
coord_flip()
#--------------------------------------------------------------------------------------------------
### Draw scatterplots of value vs. each attribute to visually ascertain relationships
Date.gg <- ggplot(data=ships, aes(x=SalePrice,y=SalesDate)) +
geom_point(colour = "blue", size = 3) +
labs(x = "Sale Price ($ US Mil)", y = "Sales Date") +
theme_light() +
coord_flip()
Date.gg
#--------------------------------------------------------------------------------------------------
### Draw scatterplots of value vs. each attribute to visually ascertain relationships
Date.gg <- ggplot(data=ships, aes(x=SalePrice,y=SalesDate)) +
geom_point(colour = "blue", size = 3) +
ggtitle("Sales Date * Sale Price") +
labs(x = "Sale Price ($ US Mil)", y = "Sales Date") +
theme_light() +
coord_flip()
Date.gg
#--------------------------------------------------------------------------------------------------
### Draw scatterplots of value vs. each attribute to visually ascertain relationships
Date.gg <- ggplot(data=ships, aes(x=SalePrice,y=SalesDate)) +
geom_point(colour = "blue", size = 3) +
ggtitle("Sales Price * Sales Date") +
labs(x = "Sale Price ($ US Mil)", y = "Sales Date") +
theme_light() +
coord_flip()
Age.gg <- ggplot(data=ships,aes(x=SalePrice,y=AgeAtSale)) +
geom_point(colour = "blue", size = 3) +
ggtitle("Sale Price * Age") +
labs(x = "Sale Price ($ US Mil)", y = "Age (years)") +
theme_light() +
coord_flip()
DWT.gg <- ggplot(data=ships,aes(x=SalePrice,y=DWT)) +
geom_point(colour = "blue", size = 3) +
ggtitle("Sale Price * Dead Weight Tons") +
labs(x = "Sale Price ($ US Mil)", y = "Dead Weight Tons") +
theme_light() +
coord_flip()
Index.gg <- ggplot(data=ships,aes(x=SalePrice,y=Index)) +
geom_point(colour = "blue", size = 3) +
ggtitle("Sale Price * Trailing 1-year CapeSize Index") +
labs(x = "Sale Price ($ US Mil)", y = "Trailing 1-year CapeSize Index") +
theme_light() +
coord_flip()
Speed.gg <- ggplot(data=ships,aes(x=SalePrice,y=Speed)) +
geom_point(colour = "blue", size = 3) +
ggtitle("Sale Price * Average Speed") +
labs(x = "Sale Price ($ US Mil)", y = "Average Speed") +
theme_light() +
coord_flip()
Draught.gg <- ggplot(data=ships,aes(x=SalePrice,y=Draught)) +
geom_point(colour = "blue", size = 3) +
ggtitle("Sale Price * Draught") +
labs(x = "Sale Price ($ US Mil)", y = "Draught (m)") +
theme_light() +
coord_flip()
Tons.gg <- ggplot(data=ships,aes(x=SalePrice,y=Tons)) +
geom_point(colour = "blue", size = 3) +
ggtitle("Sale Price * Gross Tonnage") +
labs(x = "Sale Price ($ US Mil)", y = "Gross Tonnage") +
theme_light() +
coord_flip()
Length.gg <- ggplot(data=ships,aes(x=SalePrice,y=Length)) +
geom_point(colour = "blue", size = 3) +
ggtitle("Sale Price * Length") +
labs(x = "Sale Price ($ US Mil)", y = "Length (m)") +
theme_light() +
coord_flip()
Width.gg <- ggplot(data=ships,aes(x=SalePrice,y=Width)) +
geom_point(colour = "blue", size = 3) +
ggtitle("Sale Price * Width") +
labs(x = "Sale Price ($ US Mil)", y = "Width (m)") +
theme_light() +
coord_flip()
plot_grid(Date.gg, Age.gg, DWT.gg, Index.gg)
plot_grid(Length.gg, Width.gg, Draught.gg, Tons.gg, Speed.gg)
Age.gg
# Multiple R-squared:  0.6201,	Adjusted R-squared:  0.6119
# F-statistic:  75.1 on 1 and 46 DF,  p-value: 3.147e-11
Age.gg +
geom_smooth(Age.lm)
# Multiple R-squared:  0.6201,	Adjusted R-squared:  0.6119
# F-statistic:  75.1 on 1 and 46 DF,  p-value: 3.147e-11
Age.gg +
geom_smooth()
# Multiple R-squared:  0.6201,	Adjusted R-squared:  0.6119
# F-statistic:  75.1 on 1 and 46 DF,  p-value: 3.147e-11
Age.gg +
geom_smooth(method = "lm", se = FALSE)
lines(ships$AgeAtSale, predict(Age.lm), col="red",lty=1,lwd=3)
plot(ships$AgeAtSale, ships$SalePrice)
lines(ships$AgeAtSale, predict(Age.lm), col="red",lty=1,lwd=3)
summary(Age.lm)
# Multiple R-squared:  0.6201,	Adjusted R-squared:  0.6119
# F-statistic:  75.1 on 1 and 46 DF,  p-value: 3.147e-11
Age.gg +
geom_abline(intercept= 133.1295, slope= -4.2165)
Age.gg +
geom_smooth(method = "lm", se = FALSE)
Age.lm
coef(Age.lm)
# Multiple R-squared:  0.6201,	Adjusted R-squared:  0.6119
# F-statistic:  75.1 on 1 and 46 DF,  p-value: 3.147e-11
Age.gg +
geom_abline( coef(Age.lm))
# Multiple R-squared:  0.6201,	Adjusted R-squared:  0.6119
# F-statistic:  75.1 on 1 and 46 DF,  p-value: 3.147e-11
Age.gg +
geom_abline(intercept= 133.1295, slope= -4.2165)
Age.gg +
geom_smooth(method = "lm", se = FALSE)
# Multiple R-squared:  0.6201,	Adjusted R-squared:  0.6119
# F-statistic:  75.1 on 1 and 46 DF,  p-value: 3.147e-11
Age.gg +
geom_abline(intercept = 133.1295, slope = -4.2165)
# Multiple R-squared:  0.6201,	Adjusted R-squared:  0.6119
# F-statistic:  75.1 on 1 and 46 DF,  p-value: 3.147e-11
Age.gg +
geom_abline(intercept = 133.1295, slope = -4.2165) + coord_flip()
# Multiple R-squared:  0.6201,	Adjusted R-squared:  0.6119
# F-statistic:  75.1 on 1 and 46 DF,  p-value: 3.147e-11
Age.gg coord_flip()+
geom_abline(intercept = 133.1295, slope = -4.2165) + coord_flip()
# Multiple R-squared:  0.6201,	Adjusted R-squared:  0.6119
# F-statistic:  75.1 on 1 and 46 DF,  p-value: 3.147e-11
Age.gg coord_flip()+
geom_abline(intercept = 133.1295, slope = -4.2165)
# Multiple R-squared:  0.6201,	Adjusted R-squared:  0.6119
# F-statistic:  75.1 on 1 and 46 DF,  p-value: 3.147e-11
Age.gg + coord_flip()+
geom_abline(intercept = 133.1295, slope = -4.2165)
# Age is the best single predictor
Age.lm <- lm(SalePrice ~ AgeAtSale, data=ships)
summary(Age.lm)
# Multiple R-squared:  0.6201,	Adjusted R-squared:  0.6119
# F-statistic:  75.1 on 1 and 46 DF,  p-value: 3.147e-11
Age.gg +
geom_abline(intercept = 133.1295, slope = -4.2165)
# Multiple R-squared:  0.6201,	Adjusted R-squared:  0.6119
# F-statistic:  75.1 on 1 and 46 DF,  p-value: 3.147e-11
Age.gg +
lines(ships$AgeAtSale, predict(Age.lm), col="red",lty=1,lwd=3)
Age.gg <- ggplot(data=ships,aes(x=AgeAtSale,y=SalePrice)) +
geom_point(colour = "blue", size = 3) +
ggtitle("Sale Price * Age") +
labs(x = "Age (years)", y = "Sale Price ($ US Mil)") +
theme_light()
# Multiple R-squared:  0.6201,	Adjusted R-squared:  0.6119
# F-statistic:  75.1 on 1 and 46 DF,  p-value: 3.147e-11
Age.gg +
geom_abline(intercept = 133.1295, slope = -4.2165)
#--------------------------------------------------------------------------------------------------
### Draw scatterplots of value vs. each attribute to visually ascertain relationships
Date.gg <- ggplot(data=ships, aes(x=SalesDate,y=SalePrice)) +
geom_point(colour = "blue", size = 3) +
ggtitle("Sales Price * Sales Date") +
labs(x = "Sales Date", y = "Sale Price ($ US Mil)") +
theme_light() +
coord_flip()
Age.gg <- ggplot(data=ships,aes(x=AgeAtSale,y=SalePrice)) +
geom_point(colour = "blue", size = 3) +
ggtitle("Sale Price * Age") +
labs(x = "Age (years)", y = "Sale Price ($ US Mil)") +
theme_light()
DWT.gg <- ggplot(data=ships,aes(x=DWT,y=SalePrice)) +
geom_point(colour = "blue", size = 3) +
ggtitle("Sale Price * Dead Weight Tons") +
labs(x = "Dead Weight Tons", y = "Sale Price ($ US Mil)")+
theme_light()
Index.gg <- ggplot(data=ships,aes(x=Index,y=SalePrice)) +
geom_point(colour = "blue", size = 3) +
ggtitle("Sale Price * Trailing 1-year CapeSize Index") +
labs(x = "Trailing 1-year CapeSize Index", y = "Sale Price ($ US Mil)") +
theme_light()
Speed.gg <- ggplot(data=ships,aes(x=Speed,y=SalePrice)) +
geom_point(colour = "blue", size = 3) +
ggtitle("Sale Price * Average Speed") +
labs(x = "Average Speed", y = "Sale Price ($ US Mil)") +
theme_light()
Draught.gg <- ggplot(data=ships,aes(x=Draught,y=SalePrice)) +
geom_point(colour = "blue", size = 3) +
ggtitle("Sale Price * Draught") +
labs(x = "Draught (m)", y = "Sale Price ($ US Mil)") +
theme_light()
Tons.gg <- ggplot(data=ships,aes(x=Tons,y=SalePrice)) +
geom_point(colour = "blue", size = 3) +
ggtitle("Sale Price * Gross Tonnage") +
labs(x = "Gross Tonnage", y = "Sale Price ($ US Mil)") +
theme_light()
Length.gg <- ggplot(data=ships,aes(x=Length,y=SalePrice)) +
geom_point(colour = "blue", size = 3) +
ggtitle("Sale Price * Length") +
labs(x = "Length (m)", y = "Sale Price ($ US Mil)") +
theme_light()
Width.gg <- ggplot(data=ships,aes(x=Width,y=SalePrice)) +
geom_point(colour = "blue", size = 3) +
ggtitle("Sale Price * Width") +
labs(x = "Width (m)", y = "Sale Price ($ US Mil)") +
theme_light()
plot_grid(Date.gg, Age.gg, DWT.gg, Index.gg)
Date.gg
plot_grid(Date.gg, Age.gg, DWT.gg, Index.gg) + coord_flip()
scatterplots of value vs. each attribute to visually ascertain relationships
Date.gg <- ggplot(data=ships, aes(x=SalesDate,y=SalePrice)) +
geom_point(colour = "blue", size = 3) +
ggtitle("Sales Price * Sales Date") +
labs(x = "Sales Date", y = "Sale Price ($ US Mil)") +
theme_light() +
coord_flip()
Age.gg <- ggplot(data=ships,aes(x=AgeAtSale,y=SalePrice)) +
geom_point(colour = "blue", size = 3) +
ggtitle("Sale Price * Age") +
labs(x = "Age (years)", y = "Sale Price ($ US Mil)") +
theme_light()
DWT.gg <- ggplot(data=ships,aes(x=DWT,y=SalePrice)) +
geom_point(colour = "blue", size = 3) +
ggtitle("Sale Price * Dead Weight Tons") +
labs(x = "Dead Weight Tons", y = "Sale Price ($ US Mil)")+
theme_light()
Index.gg <- ggplot(data=ships,aes(x=Index,y=SalePrice)) +
geom_point(colour = "blue", size = 3) +
ggtitle("Sale Price * Trailing 1-year CapeSize Index") +
labs(x = "Trailing 1-year CapeSize Index", y = "Sale Price ($ US Mil)") +
theme_light()
Speed.gg <- ggplot(data=ships,aes(x=Speed,y=SalePrice)) +
geom_point(colour = "blue", size = 3) +
ggtitle("Sale Price * Average Speed") +
labs(x = "Average Speed", y = "Sale Price ($ US Mil)") +
theme_light()
Draught.gg <- ggplot(data=ships,aes(x=Draught,y=SalePrice)) +
geom_point(colour = "blue", size = 3) +
ggtitle("Sale Price * Draught") +
labs(x = "Draught (m)", y = "Sale Price ($ US Mil)") +
theme_light()
Tons.gg <- ggplot(data=ships,aes(x=Tons,y=SalePrice)) +
geom_point(colour = "blue", size = 3) +
ggtitle("Sale Price * Gross Tonnage") +
labs(x = "Gross Tonnage", y = "Sale Price ($ US Mil)") +
theme_light()
# USD_Units.gg <- ggplot() +
# geom_point(data=ships,aes(x=USD_Units,y=SalePrice))
# Units_USD.gg <- ggplot() +
# geom_point(data=ships,aes(x=Units_USD,y=SalePrice))
Length.gg <- ggplot(data=ships,aes(x=Length,y=SalePrice)) +
geom_point(colour = "blue", size = 3) +
ggtitle("Sale Price * Length") +
labs(x = "Length (m)", y = "Sale Price ($ US Mil)") +
theme_light()
Width.gg <- ggplot(data=ships,aes(x=Width,y=SalePrice)) +
geom_point(colour = "blue", size = 3) +
ggtitle("Sale Price * Width") +
labs(x = "Width (m)", y = "Sale Price ($ US Mil)") +
theme_light()
plot_grid(Date.gg, Age.gg, DWT.gg, Index.gg) + coord_flip()
plot_grid(Length.gg, Width.gg, Draught.gg, Tons.gg, Speed.gg) + coord_flip()
# plot_grid(USD_Units.gg, Units_USD.gg)
plot_grid(Date.gg, Age.gg, DWT.gg, Index.gg) + coord_flip()
plot_grid(Length.gg, Width.gg, Draught.gg, Tons.gg, Speed.gg) + coord_flip()
plot_grid(Date.gg,
Age.gg + geom_abline(intercept = 133.1295, slope = -4.2165),
DWT.gg,
Index.gg) +
coord_flip()
Date.lm
coef(Date.lm)
plot_grid(Date.gg + geom_abline(intercept = -3.015731e+03, slope = 7.861652e-02),
Age.gg + geom_abline(intercept = 133.1295, slope = -4.2165),
DWT.gg + geom_abline(intercept = 133.1295, slope = -4.2165),
Index.gg + geom_abline(intercept = 133.1295, slope = -4.2165)) +
coord_flip()
coef(DWT.lm)
coef(Index.lm)
plot_grid(Date.gg + geom_abline(intercept = -3.015731e+03, slope = 7.861652e-02),
Age.gg + geom_abline(intercept = 133.1295, slope = -4.2165),
DWT.gg + geom_abline(intercept = -84.1650990, slope = 0.9885861),
Index.gg + geom_abline(intercept = 36.430785856, slope = 0.004778501)) +
coord_flip()
coef(Length.lm)
coef(Width.lm)
coef(Draught.lm)
coef(Tons.lm)
coef(Speed.lm)
plot_grid(Length.gg + geom_abline(intercept = -51.9151469, slope = 0.4570504),
Width.gg + geom_abline(intercept = -31.121574, slope = 2.409813),
Draught.gg + geom_abline(intercept = 110.39517, slope = -4.82953),
Tons.gg + geom_abline(intercept = -14.022024101, slope = 0.001068928),
Speed.gg + geom_abline(intercept = 3.004952, slope = 7.641123)) +
coord_flip()
plot_grid(Date.gg + geom_abline(intercept = -3.015731e+03, slope = 7.861652e-02),
Age.gg + geom_smooth(method="lm"),
DWT.gg + geom_abline(intercept = -84.1650990, slope = 0.9885861),
Index.gg + geom_abline(intercept = 36.430785856, slope = 0.004778501)) +
coord_flip()
plot_grid(Date.gg + geom_abline(intercept = -3.015731e+03, slope = 7.861652e-02),
Age.gg + geom_smooth(method="lm")+ geom_abline(intercept = 133.1295, slope = -4.2165),
DWT.gg + geom_abline(intercept = -84.1650990, slope = 0.9885861),
Index.gg + geom_abline(intercept = 36.430785856, slope = 0.004778501)) +
coord_flip()
Age.gg + geom_smooth(method="lm", se=T),
Index.gg + geom_smooth(method="lm", se=T) +
plot_grid(Date.gg + geom_smooth(method="lm", se=T) +
Age.gg + geom_smooth(method="lm", se=T) +
DWT.gg + geom_smooth(method="lm", se=T) +
Index.gg + geom_smooth(method="lm", se=T)) +
coord_flip()
plot_grid(Date.gg + geom_smooth(method="lm", se=T) +
Age.gg + geom_smooth(method="lm", se=T) +
DWT.gg + geom_smooth(method="lm", se=T) +
Index.gg + geom_smooth(method="lm", se=T)) +
coord_flip()
plot_grid(Date.gg + geom_smooth(method="lm") +
Age.gg + geom_smooth(method="lm", se=T) +
DWT.gg + geom_smooth(method="lm", se=T) +
Index.gg + geom_smooth(method="lm", se=T)) +
coord_flip()
plot_grid(Date.gg +
Age.gg + geom_smooth(method="lm", se=T) +
DWT.gg + geom_smooth(method="lm", se=T) +
Index.gg + geom_smooth(method="lm", se=T)) +
coord_flip()
plot_grid(Date.gg + geom_smooth(method="lm") +
Age.gg + geom_smooth(method="lm") +
DWT.gg + geom_smooth(method="lm") +
Index.gg + geom_smooth(method="lm")) +
coord_flip()
plot_grid(Date.gg + geom_smooth(method="lm") + geom_abline(intercept = -3.015731e+03, slope = 7.861652e-02),
Age.gg + geom_smooth(method="lm") + geom_abline(intercept = 133.1295, slope = -4.2165),
DWT.gg + geom_abline(intercept = -84.1650990, slope = 0.9885861),
Index.gg + geom_abline(intercept = 36.430785856, slope = 0.004778501)) +
coord_flip()
plot_grid(Date.gg + geom_smooth(method="lm") + geom_abline(intercept = -3.015731e+03, slope = 7.861652e-02),
Age.gg + geom_smooth(method="lm") + geom_abline(intercept = 133.1295, slope = -4.2165),
DWT.gg + geom_smooth(method="lm") + geom_abline(intercept = -84.1650990, slope = 0.9885861),
Index.gg + geom_abline(intercept = 36.430785856, slope = 0.004778501)) +
coord_flip()
plot_grid(Date.gg + geom_smooth(method="lm") + geom_abline(intercept = -3.015731e+03, slope = 7.861652e-02),
Age.gg + geom_smooth(method="lm") + geom_abline(intercept = 133.1295, slope = -4.2165),
DWT.gg + geom_smooth(method="lm") + geom_abline(intercept = -84.1650990, slope = 0.9885861),
Index.gg + geom_smooth(method="lm") + geom_abline(intercept = 36.430785856, slope = 0.004778501)) +
coord_flip()
Index.gg + geom_smooth(method="lm") +
coord_flip()
coord_flip()
plot_grid(Date.gg + geom_smooth(method="lm"),
Age.gg + geom_smooth(method="lm"),
DWT.gg + geom_smooth(method="lm"),
Index.gg + geom_smooth(method="lm")) +
coord_flip()
plot_grid(Length.gg + geom_smooth(method="lm"),
Width.gg + geom_smooth(method="lm"),
Draught.gg + geom_smooth(method="lm"),
Tons.gg + geom_smooth(method="lm"),
Speed.gg + geom_smooth(method="lm")) +
coord_flip()
plot_grid(Date.gg + geom_smooth(method="lm") + coord_flip(),
Age.gg + geom_smooth(method="lm") + coord_flip(),
DWT.gg + geom_smooth(method="lm") + coord_flip(),
Index.gg + geom_smooth(method="lm") + coord_flip())
plot_grid(Length.gg + geom_smooth(method="lm") + coord_flip(),
Width.gg + geom_smooth(method="lm") + coord_flip(),
Draught.gg + geom_smooth(method="lm") + coord_flip(),
Tons.gg + geom_smooth(method="lm") + coord_flip(),
Speed.gg + geom_smooth(method="lm") + coord_flip())
plot_grid(Date.gg + geom_smooth(method="lm") + coord_flip(),
Age.gg + geom_smooth(method="lm") + coord_flip(),
DWT.gg + geom_smooth(method="lm") + coord_flip(),
Index.gg + geom_smooth(method="lm") + coord_flip()) +
coord_flip()
plot_grid(Date.gg + geom_smooth(method="lm") + coord_flip(),
Age.gg + geom_smooth(method="lm") + coord_flip(),
DWT.gg + geom_smooth(method="lm") + coord_flip(),
Index.gg + geom_smooth(method="lm") + coord_flip()) +
coord_flip()
